/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2010 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package com.hmkang.TiUA;
import android.app.Application;
import android.content.Context;
import android.content.Intent;

import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.kroll.KrollDict;

import org.appcelerator.titanium.TiContext;
import org.appcelerator.titanium.TiApplication;
//import org.appcelerator.titanium.kroll.KrollFunction;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.kroll.common.TiConfig;

import com.hmkang.TiUA.IntentReceiver;
import com.urbanairship.AirshipConfigOptions;
import com.urbanairship.Logger;
import com.urbanairship.UAirship;
import com.urbanairship.push.CustomPushNotificationBuilder;
import com.urbanairship.push.PushManager;
import com.urbanairship.push.PushPreferences;


@Kroll.module(name="Tiua", id="com.hmkang.TiUA")
public class TiuaModule extends KrollModule
{

	// Standard Debugging variables
	private static final String LCAT = "TiuaModule";
	private static final boolean DBG = TiConfig.LOGD;
    private static TiuaModule _THIS;

    //private KrollFunction messageCallback;
	
	// You can define constants with @Kroll.constant, for example:
	// @Kroll.constant public static final String EXTERNAL_NAME = value;
	
	public TiuaModule(TiContext tiContext)
	{
		super(tiContext);
        _THIS = this;
	}

    static TiuaModule getInstance() {
        return _THIS;
    }

	@Kroll.onAppCreate
	public static void onAppCreate(TiApplication app)
	{
		Log.d(LCAT, "inside onAppCreate");
		// put module init code that needs to run when the application is created
        //AirshipConfigOptions options = new AirshipConfigOptions();
        AirshipConfigOptions options = AirshipConfigOptions.loadDefaultOptions(app);

        // Optionally, customize your config at runtime:
        //
        /*
        options.inProduction = inProduction;
        options.hostURL = "https://go.urbanairship.com";
        options.pushServiceEnabled = true;
        options.c2dmSender = sender;
        options.transport = transport;
        if(options.inProduction){
	        options.productionAppKey = key;
	        options.productionAppSecret = secret;
        }else{
	        options.developmentAppKey = key;
	        options.developmentAppSecret = secret;
        }
        */
        
        //Application app = (Application) mApp;
        UAirship.takeOff(app, options);
        PushManager.enablePush(); // added by hmkang

		PushPreferences prefs = PushManager.shared().getPreferences();
		Logger.info("My Application onCreate - App APID: " + prefs.getPushId());

        // Set intent receiver
        PushManager.shared().setIntentReceiver(IntentReceiver.class);
	}
    public void sendMessage(String alert){
		Log.d(LCAT, "sendMessage called: " + alert);
        /*
        if(messageCallback != null){
            KrollDict msg = new KrollDict();
            msg.put("alert", data);

            messageCallback.callSync(msg);
        }
        */
    }
	// Methods
	@Kroll.method
	public void registerCallback(KrollDict options)
	{
		Log.d(LCAT, "registerCallback called");
        //messageCallback = (KrollFunction)options.get("callback");
	}
	
	// Properties
	@Kroll.getProperty
	public String getExampleProp()
	{
		Log.d(LCAT, "get example property");
		return "hello world";
	}
	
	
	@Kroll.setProperty
	public void setExampleProp(String value) {
		Log.d(LCAT, "set example property: " + value);
	}
}

